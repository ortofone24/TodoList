@page "/tasks"


@using TodoList.Web.Models

<h3>Lista Zadań</h3>

@if (taskItems == null)
{
    <p><em>Ładowanie...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Tytuł</th>
                <th>Termin</th>
                <th>Ukończone</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in taskItems)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.DueDate.ToShortDateString()</td>
                    <td>@item.IsCompleted</td>
                    <td>
                        <a href="@($"/tasks/details/{item.Id}")">Szczegóły</a> |
                        <a href="@($"/tasks/edit/{item.Id}")">Edytuj</a> |
                        <a href="@($"/tasks/delete/{item.Id}")">Usuń</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <p>
        <a href="/tasks/create">Utwórz nowe zadanie</a>
    </p>
}

@code {
    private List<TaskItem> taskItems;

    protected override async Task OnInitializedAsync()
    {
        taskItems = await Http.GetFromJsonAsync<List<TaskItem>>("api/Task/all");
    }

    [Inject]
    public HttpClient Http { get; set; }
}
